<!--pages/wxml/wxml.wxml-->
<!-- 1.wxml的格式 -->
<!-- 2.Mustache语法 -->
<view>{{message}}</view>
<view>{{firstname}} {{lastname}}</view>
<view>{{firstname + ' ' + lastname}}</view>
<view>{{age > 18 ? '成年人' : '未成年人'}}</view>
<view>{{nowTime}}</view>

<button size="mini" bindtap="handleSwitchColor">切换颜色</button>
<view class='box {{isActive ? "active" : ""}}'>哈哈哈</view>

<view>------------条件判断---------------</view>
<button size="mini" bindtap="handleSwitchShow">切换显示</button>
<view wx:if="{{isShow}}">哈哈哈</view>

<!-- wx:elif/wx:else -->
<button size="mini" bindtap="handleIncrement">分数递增6</button>
<view wx:if='{{score >= 90}}'>优秀</view>
<view wx:elif='{{score >= 80}}'>良好</view>
<view wx:elif='{{score >= 60}}'>及格</view>
<view wx:else>不及格</view>
<view>{{score}}</view>

<!-- hidden属性 -->
<view hidden="{{false}}">我是hidden属性控制的内容</view>

<!-- wx:if和hidden在隐藏组件时有什么区别 -->
<!-- 
区别：
  hidden: 讲一个组件隐藏起来时，该组件依然是存在(display: none)
  wx:if: 讲一个组件隐藏起来时，该组件压根不存在（压根没有创建） 
选择：
  如果显示和隐藏切换的频率非常高，选择使用hidden
  如果显示和隐藏切换频率非常低，那么选择wx:if
-->

<view hidden="{{true}}">我是通过hidden控制的内容</view>
<view wx:if="{{false}}">我是通过wx:if控制的内容</view>

<view>---------------- 列表渲染 ----------------</view>
<!-- 1.wx:for的回顾 -->
<!-- 1.1.遍历数组/字符串/数字 -->
<!-- <view wx:for="LiuZiDing">{{item}} {{index}}</view>
<view wx:for="{{9}}">{{item}}</view> -->

<!-- block标签 -->
<block wx:if="{{isShow}}">
  <button>按钮</button>
  <view>呵呵呵</view>
  <text>我的内容</text>
</block>

<block wx:for="{{3}}" wx:key="">
  <button>按钮</button>
  <view>呵呵呵</view>
  <text>我的内容</text>
</block>

<!-- 3.item、index起名字 -->
<view wx:for="{{movies}}" wx:key="">{{item}}</view>
<view wx:for="{{movies}}" wx:for-item="movie" wx:for-index="i" wx:key="">{{movie}} {{i}}</view>

<block wx:for="{{nums}}" wx:for-item="inner_nums" wx:key="">
  <block wx:for="{{inner_nums}}" wx:key="">
    <view>{{item}}</view>
  </block>
</block>

<!-- 4.key的作用 -->
<view wx:for="{{letters}}" wx:key="">{{item}}</view>

<view>---------- template -----------</view>
<!-- 之前的小程序不支持自定义组件，为了进行代码的复用： template -->
<!-- 模板中包裹的内容，在没有被使用前，是不会进行任何的渲染的 -->
<!-- <template name="contentItem">
  <button>{{btnText}}</button>
  <view>{{content}}</view>
</template> -->
<!-- 结论：include是不能导入模板 -->
<!-- 
关于wxml的导入有两种方式：
  import导入：
    1.主要是template
    2.特点：不能进行递归导入
  include引入：
    1.将公共的wxml中的组件抽取到一个文件中
    2.特点：不能导入template/wxs, 可以进行递归导入
 -->

<import src="/wxml/template.wxml" />
<import src="/wxml/abc.wxml" />


<template is="contentItem" data="{{btnText: '按钮', content: '哈哈哈'}}" />
<template is="contentItem" data="{{btnText: '警告', content: '嘻嘻嘻'}}" />
<template is="contentItem" data="{{btnText: '点击', content: '嘿嘿嘿'}}" />
<template is="contentItem" data="{{btnText: '登录', content: '呵呵呵'}}" />

<template is="abc" />








